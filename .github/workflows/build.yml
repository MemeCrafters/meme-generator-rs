name: Build

on:
  push:
    branches:
      - main
    paths:
      - "Cargo.toml"
      - "meme_generator/**"
      - "meme_generator_cli/**"
      - "meme_generator_core/**"
      - "meme_generator_memes/**"
      - "meme_generator_node/**"
      - "meme_generator_py/**"
      - "meme_generator_server/**"
      - "meme_generator_utils/**"
      - "meme_options_derive/**"
    tags:
      - "v*"
  pull_request:
    paths:
      - "Cargo.toml"
      - "meme_generator/**"
      - "meme_generator_cli/**"
      - "meme_generator_core/**"
      - "meme_generator_memes/**"
      - "meme_generator_node/**"
      - "meme_generator_py/**"
      - "meme_generator_server/**"
      - "meme_generator_utils/**"
      - "meme_options_derive/**"
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  build_windows:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x86_64-pc-windows-msvc
            label: windows-x86_64

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@1.88.0
      - uses: swatinem/rust-cache@v2

      - name: Build target
        run: |
          rustup target add ${{ matrix.platform.target }}
          cargo build --release --target ${{ matrix.platform.target }} --bin meme --features server

      - uses: actions/upload-artifact@v4
        with:
          name: "meme-generator-cli-${{ matrix.platform.label }}"
          path: |
            target/${{ matrix.platform.target }}/release/meme*
            !target/${{ matrix.platform.target }}/release/meme.pdb

      - uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Build nodejs addon
        run: pnpm install && pnpm build --release --target ${{ matrix.platform.target }}
        working-directory: meme_generator_node

      - uses: actions/upload-artifact@v4
        with:
          name: "meme-generator-node-${{ matrix.platform.label }}"
          path: meme_generator_node/meme-generator*

      - name: Build python wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          working-directory: meme_generator_py
          args: --release --out dist

      - uses: actions/upload-artifact@v4
        with:
          name: meme-generator-py-${{ matrix.platform.label }}
          path: meme_generator_py/dist

  build_macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-latest
            target: x86_64-apple-darwin
            label: macos-x86_64
          - runner: macos-latest
            target: aarch64-apple-darwin
            label: macos-aarch64

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@1.88.0
      - uses: swatinem/rust-cache@v2

      - name: Build target
        run: |
          rustup target add ${{ matrix.platform.target }}
          cargo build --release --target ${{ matrix.platform.target }} --bin meme --features server

      - uses: actions/upload-artifact@v4
        with:
          name: "meme-generator-cli-${{ matrix.platform.label }}"
          path: |
            target/${{ matrix.platform.target }}/release/meme*
            !target/${{ matrix.platform.target }}/release/meme.d

      - uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Build nodejs addon
        run: pnpm install && pnpm build --release --target ${{ matrix.platform.target }}
        working-directory: meme_generator_node

      - uses: actions/upload-artifact@v4
        with:
          name: "meme-generator-node-${{ matrix.platform.label }}"
          path: meme_generator_node/meme-generator*

      - name: Build python wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          working-directory: meme_generator_py
          args: --release --out dist

      - uses: actions/upload-artifact@v4
        with:
          name: meme-generator-py-${{ matrix.platform.label }}
          path: meme_generator_py/dist

  build_linux:
    runs-on: ${{ matrix.platform.runner }}
    container: ${{ matrix.platform.container }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            container: ghcr.io/memecrafters/meme-generator-build-container:latest
            target: x86_64-unknown-linux-gnu
            label: linux-x86_64
          - runner: ubuntu-24.04-arm
            container: ghcr.io/memecrafters/meme-generator-build-container:arm64
            target: aarch64-unknown-linux-gnu
            label: linux-aarch64

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@1.88.0
      - uses: swatinem/rust-cache@v2

      - name: Build target
        run: |
          rustup target add ${{ matrix.platform.target }}
          cargo build --release --target ${{ matrix.platform.target }} --bin meme --features server,vendored,embed-freetype

      - uses: actions/upload-artifact@v4
        with:
          name: "meme-generator-cli-${{ matrix.platform.label }}"
          path: |
            target/${{ matrix.platform.target }}/release/meme*
            !target/${{ matrix.platform.target }}/release/meme.d

      - uses: pnpm/action-setup@v4
        with:
          version: 10

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Build nodejs addon
        run: pnpm install && pnpm build --release --target ${{ matrix.platform.target }} --features vendored,embed-freetype
        working-directory: meme_generator_node

      - uses: actions/upload-artifact@v4
        with:
          name: "meme-generator-node-${{ matrix.platform.label }}"
          path: meme_generator_node/meme-generator*

      - name: Build python wheels
        run: |
          pip3 install pipx
          export PATH=$PATH:/github/home/.local/bin
          pipx install maturin
          pipx install patchelf
          maturin build --release --out dist --target ${{ matrix.platform.target }} --features vendored,embed-freetype
        working-directory: meme_generator_py

      - uses: actions/upload-artifact@v4
        with:
          name: meme-generator-py-${{ matrix.platform.label }}
          path: meme_generator_py/dist

  build_android:
    runs-on: ${{ matrix.platform.runner }}
    container: ${{ matrix.platform.container }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            container: ghcr.io/memecrafters/meme-generator-build-container:android
            target: aarch64-linux-android
            label: android-aarch64

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@1.88.0
      - uses: swatinem/rust-cache@v2

      - name: Rustup add target
        run: rustup target add ${{ matrix.platform.target }}

      - name: Build target
        run: cargo build --release --target ${{ matrix.platform.target }} --bin meme --features server,vendored

      - uses: actions/upload-artifact@v4
        with:
          name: "meme-generator-cli-${{ matrix.platform.label }}"
          path: |
            target/${{ matrix.platform.target }}/release/meme*
            !target/${{ matrix.platform.target }}/release/meme.d
